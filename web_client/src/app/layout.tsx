"use client";

import type { Metadata } from 'next';
import localFont from 'next/font/local';
import './globals.css';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { Provider, useDispatch } from 'react-redux';
import { store } from '@/store';
import { useEffect } from 'react';
import { usePathname, useRouter } from 'next/navigation';
import { loginUser } from '@/features/user';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const navigate = useRouter();
  const path = usePathname(); 
  useEffect(() => {
    const login = localStorage.getItem('login')
    
    if (!login && (path !== '/login' && path !== '/register')) {
      navigate.push('/login')
    } else if (login && (path === '/login' || path === '/register')) {
      navigate.push('/')
    }

  }, []);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ToastContainer />
        <Provider store={store}>{children}</Provider>
      </body>
    </html>
  );
}
